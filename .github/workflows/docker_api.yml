name: Docker Image API

on:
  push:
    branches: [ master ]
    paths:
    - 'src/golang/API/**'
    - '.github/workflows/docker_api.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        buildx-version: latest
        qemu-version: latest

    - name: Build, tag, and push frontend image to Amazon ECR
      id: build-api-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: sabbatical/api
        IMAGE_TAG: ${{ github.sha }}
      working-directory: ./src/golang/API/
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.

        # multiplatform build and push
        docker buildx build --push \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
          --platform linux/amd64,linux/arm/v7 .

        # buildx does not add an image to the local docker
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
